name: Build and Deploy

on:
  push:
    branches: 
      - main 
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generated Environment Variables File
        run: |
          echo "${{ secrets.ENV }}" > .env 
  
          
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t changhom/awstestimg .
          docker push changhom/awstestimg
          
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull changom/awstestimg
            docker stop server
            docker run -d --rm --name server -p 8080:8080 changhom/awstestimg
            
  #     깡 배포
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: build-file
  #         path: build/libs/*.jar

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build-file
  #         path: build/libs/

  #     - name: Deploy to EC2
  #       run: |
  #         echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
  #         chmod 600 private_key.pem
  #         scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/AWS-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/aws.jar
  #         ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pgrep java | xargs kill -9; nohup java -jar /home/${{ secrets.EC2_USER }}/aws.jar > app.log 2>&1 &"
  #         rm -f private_key.pem
